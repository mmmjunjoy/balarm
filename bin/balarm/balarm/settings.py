"""
Django settings for balarm project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

import pymysql
pymysql.install_as_MySQLdb()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)if-@+&1ug^)wzbf49ekj+nh00s@o#fo3#d_faz-bz4f&xwtu('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = ['*']


# CORS_ALLOWED_ORIGINS = [
#     'http://localhost:8000',  # 로컬 개발 서버
#     'http://127.0.0.1:8000',
#     'https://port-0-balarm-m1ep4ac2e3fbce39.sel4.cloudtype.app',
# ]

CORS_ALLOW_ALL_ORIGINS = True

CSRF_TRUSTED_ORIGINS = [
    'http://localhost:8000',  # 로컬 개발 서버
    'http://127.0.0.1:8000',
    'https://port-0-balarm-m1ep4ac2e3fbce39.sel4.cloudtype.app',
]

SECURE_SSL_REDIRECT = False

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'alarm',
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'channels',
    'corsheaders',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    # 'alarm.middleware.JWTAuthMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]




# settings.py


ROOT_URLCONF = 'balarm.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'balarm.wsgi.application'

ASGI_APPLICATION = 'balarm.asgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# import environ

# import os


# env = environ.Env()
# environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# SECRET_KEY = env('DJANGO_SECRET_KEY')

# DATABASE ={
#     'default': env.db(),
# }

# settings.py에 추가하거나 테스트 전용 설정 파일을 만들어 사용
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'test_bungry_alarm',
#         'USER': 'root',
#         'PASSWORD': 'whs20102011',  # 실제 비밀번호로 교체
#         'HOST': '127.0.0.1',
#         'PORT': '3306',
#     }
# }

# import sys
# if 'test' in sys.argv:
#     CELERY_TASK_ALWAYS_EAGER = False

#     # CELERY_TASK_EAGER_PROPAGATES = True
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.mysql',
#             'NAME': 'test_bungry_alarm',
#             'USER': 'root',
#             'PASSWORD': 'whs20102011',
#             'HOST': '127.0.0.1',
#             'PORT': '3306',
#         }
#     }

# 실제
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'bungry_alarm',
#         'USER' : 'root',
#         'PASSWORD' : 'whs20102011', # 설정한 비밀번호로 적어주면 된다.
#         'HOST' : '127.0.0.1',
#         'PORT' : '3306',
#     }
# }


# 배포 db
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'test_bungry_alarm',
        'USER' : 'root',
        'PASSWORD' : 'whs20102011', # 설정한 비밀번호로 적어주면 된다.
        'HOST' : 'svc.sel4.cloudtype.app',
        'PORT' : '32283',
    }
}





# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = False



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SIMPLE_JWT = {
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM' : 'user_id',
}


AUTH_USER_MODEL = 'alarm.Userbungry'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES':[
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES':[
        'rest_framework.permissions.IsAuthenticated'
    ]
}

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME' : timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME' : timedelta(days=1),
    'ROTATE_REFRESH_TOKENS' : True,
    'BLACKLIST_AFTER_ROTATION':True,

}



#celery 설정
# CELERY_BROKER_URL = 'redis://127.0.0.1:6379/0'
# CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/0'
CELERY_BROKER_URL = 'redis://svc.sel4.cloudtype.app:32245/0'
CELERY_RESULT_BACKEND = 'redis://svc.sel4.cloudtype.app:32245/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Seoul'
# Celery 설정



#redis를 사용하여 채널 레이어 설정

# CHANNEL_LAYERS = {
#     'default' : {
#         'BACKEND' : 'channels_redis.core.RedisChannelLayer',
#         'CONFIG' : {
#             "hosts" : [("127.0.0.1",6379)],
#         },
#     }

# }

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [("svc.sel4.cloudtype.app", 32245)],
        },
    },
}


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#         },
#     },
# }